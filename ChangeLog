2006-07-12  Gustavo J. A. M. Carneiro  <gjc@inescporto.pt>

	* configure.ac: Post-release version bump to 2.11.1.

=== PyGObject 2.11.0 ===
2006-07-09  Gustavo J. A. M. Carneiro  <gjc@gnome.org>

	* gobject/gobjectmodule.c (pyg_type_register): Make interface_data
	point to the python type before adding the interface to the new
	type.  This should fix interface implementation (actually I
	thought such code had already been added earlier but can't find it
	now and it is obviously needed...)
	(pyg_type_register): move the code that needs g_type_class_ref
	until after interface registration (more code that I already wrote
	in the past but got lost).

2006-07-05  John Finlay  <finlay@moeraki.com>

	* gobject/pygiochannel.c (py_io_channel_init): Fix message typo.

2006-06-28  Cedric Gustin  <cedric.gustin@gmail.com>

	* dsextras.py (InstallData): Set datarootdir in .pc file.

	* pygobject_postinstall.py (replace_prefix): Do not parse
	pygtk-codegen-2.0 as it is part of pygtk.

	* setup.py: Create gobject extension as gobject._gobject. Add
	pygoptioncontext.c and pygoptiongroup.c to the list of source
	files. Add option.py to the module files. Changed name of
	distutils package from pygtk to pygobject.

2006-06-24  Gustavo J. A. M. Carneiro  <gjc@gnome.org>

	* gobject/gobjectmodule.c (pyg_filename_from_utf8): Wrap
	g_filename_from_utf8.

	* tests/test_signal.py (TestClosures.testGString): Add unit test
	for signals using the type TYPE_GSTRING.

	* gobject/pygtype.c (pyg_value_as_pyobject)
	(pyg_value_from_pyobject): Implement conversion code for the type
	G_TYPE_GSTRING.

	* gobject/gobjectmodule.c (pyg_filename_display_basename)
	(pyg_filename_display_name): Add bindings for
	g_filename_display_basename and g_filename_display_name.
	(init_gobject): Add a TYPE_GSTRING definition.

	* gobject/pygobject.h,
	* gobject/pygobject-private.h: Make pyg_constant_strip_prefix
	receive and return const gchar*, to indicate it does not change
	the string.  Unfortunately since PyModule_AddIntConst is broken in
	python < 2.5 this introduces const warnings elsewhere :-(

	* gobject/gobjectmodule.c (pyg_flags_add_constants) 
	(pyg_enum_add_constants): Fix const warnings.

2006-06-23  John Finlay  <finlay@moeraki.com>

	* gobject/gobjectmodule.c (pyg_object_class_list_properties)
	(pyg_signal_list_ids, pyg_signal_lookup, pyg_signal_query): Add
	support for retrieving signal and propertie info from interface types.

2006-06-04  Johan Dahlin  <johan@gnome.org>

	* gobject/gobjectmodule.c (pyg_spawn_async)
	(pyg_signal_new): Fix two leaks in error cases, found by
	Coverity.

2006-05-28  Gustavo J. A. M. Carneiro  <gjc@gnome.org>

	* tests/test_subtype.py: Uncomment Johan's "subsubtype" test case.

	* gobject/gobjectmodule.c (pygobject__g_instance_init): Pass the
	g_class to pygobject_new_full, because during the instance init
	function instances are temporarily assigned the parent's GType.

	* gobject/pygobject-private.h,
	* gobject/pygobject.c (pygobject_new_full): Make
	pygobject_new_full accept an optional g_class parameter; If
	present, the GType is extracted from the class instead of from the
	instance.

2006-05-20  Yevgen Muntyan  <muntyan@tamu.edu>

	reviewed by: Gustavo Carneiro

	* gobject/pygobject.c (pygobject_init, pygobject_get_property),
	(pygobject_set_property): Bug 341174: Be more specific in
	set/get_property error messages.

2006-05-07  Yevgen Muntyan  <muntyan@tamu.edu>

	reviewed by: Gustavo Carneiro

	* gobject/gobjectmodule.c (_log_func, add_warning_redirection),
	(remove_handler, disable_warning_redirections, init_gobject):
	* gobject/pygobject.h:  Add new pyg_add_warning_redirection and
	pyg_disable_warning_redirections APIs (bug #323786 again).

2006-05-07  Johan Dahlin  <johan@gnome.org>

	* Makefile.am (CLEANFILES): Remove pygtk.py, it's not
	auto-generated any longer. Thanks to Kjartan for noticing.

2006-05-07  Gustavo J. A. M. Carneiro  <gjc@gnome.org>

	* gobject/pygoptioncontext.c:
	s/sizeof(PyGMainContext)/sizeof(PyGOptionContext)/ (copy-paste error).

2006-05-01  Gustavo J. A. M. Carneiro  <gjc@gnome.org>

	* gobject/gobjectmodule.c (pyg_pid_close): Add a close() method
	to the GPid wrapper.
	
	* gobject/gobjectmodule.c (pyg_pid_free, pyg_pid_new),
	(pyg_spawn_async, init_gobject): Wrap GPid in an object whose
	destructor calls g_spawn_close_pid.  Fixes #340160.

2006-04-29  Johannes HÃ¶lzl <johannes.hoelzl@gmx.de>

	reviewed by: Johan Dahlin  <jdahlin@async.com.br>

	* examples/Makefile.am:
	* examples/option.py:
	* gobject/Makefile.am:
	* gobject/gobjectmodule.c: (init_gobject):
	* gobject/option.py:
	* gobject/pygobject-private.h:
	* gobject/pygoptioncontext.c: (pyg_option_context_init),
	(pyg_option_context_dealloc), (pyg_option_context_parse),
	(pyg_option_context_set_help_enabled),
	(pyg_option_context_get_help_enabled),
	(pyg_option_context_set_ignore_unknown_options),
	(pyg_option_context_get_ignore_unknown_options),
	(pyg_option_context_set_main_group),
	(pyg_option_context_get_main_group),
	(pyg_option_context_add_group), (pyg_option_context_compare),
	(pyg_option_context_new):
	* gobject/pygoptiongroup.c: (check_if_owned), (destroy_g_group),
	(pyg_option_group_init), (pyg_option_group_dealloc), (arg_func),
	(pyg_option_group_add_entries),
	(pyg_option_group_set_translation_domain),
	(pyg_option_group_compare), (pyg_option_group_transfer_group),
	(pyg_option_group_new):
	* tests/test_option.py:

	Add support for GOption, fixes #163645

2006-04-29  Johan Dahlin  <jdahlin@async.com.br>

	* gobject/pygtype.c (gclosure_from_pyfunc): 

	* gobject/pygobject.c (pygobject_disconnect_by_func) 
	(pygobject_handler_block_by_func) 
	(pygobject_handler_unblock_by_func): 

	* tests/test_signal.py (TestEmissionHook._callback): 

	Fix #154845, add tests and a private method.
	
2006-04-23  John Ehresman   <jpe@wingware.com>

	reviewed by: Gustavo

	* Makefile.am:
	* pygtk.py:
	* pygtk.py.in:
	Bug 338945: Make pygtk.py relocatable

2006-04-18  John Ehresman   <jpe@wingware.com>

	* dsextras.py: Add compiler / linker flags from pkgconfig-2.0.pc
	by default, with an override mechanism.  Filter out -lc & -lm if
	compiling with msvc.

	* setup.py: Change C extension name to _gobject and don't use the
	pkgconfig-2.0.pc when compiling

2006-04-15  Gustavo J. A. M. Carneiro  <gjc@gnome.org>

	* gobject/__init__.py (_PyGObject_API): Copy _PyGObject_API from
	gobject._gobject into gobject in order to preserve binary
	compatibility with 3rd party modules.

	* gobject/pygobject.h (init_pygobject): Import gobject, gobject._gobject.

	* gobject/Makefile.am: Fix pygobject installation dir: install
	both _gobject.la and __init__.py into
	$(pyexecdir)/gtk-2.0/gobject.

2006-04-11  Johan Dahlin  <jdahlin@async.com.br>

	* gobject/gobjectmodule.c (init_gobject): 
	* gobject/__init__.py:
	Move over almost all GType constants from C to Python.

2006-04-11  Gustavo J. A. M. Carneiro  <gjc@gnome.org>

	* gobject/__init__.py:
	* gobject/gobjectmodule.c (_wrap_pyg_type_register),
	(pyg__install_metaclass, init_gobject):  GObjectMeta now moved to
	python-land (__init__.py).
	
	* gobject/pygobject-private.h:
	* gobject/pygobject.c (pygobject_register_class):
	PyGObject_MetaType is now a pointer, not structure.

	* gobject/gobjectmodule.c (_wrap_pyg_type_register): Add optional
	type name parameter.

	* tests/common.py (importModule): Include original exception
	string in the raised SystemExit.

2006-04-11  Johan Dahlin  <jdahlin@async.com.br>

	* gobject/.cvsignore:
	* gobject/Makefile.am:
	* gobject/__init__.py:
	* gobject/gobjectmodule.c: (init_gobject):
	* gobject/pygobject.h:
	* tests/Makefile.am:
	* tests/common.py:

	Turn gobject into a package; move _gobject to gobject._gobject and
	add gobject/__init__.py. Update macros and testsuite.

2006-04-11  Johan Dahlin  <jdahlin@async.com.br>

	* configure.ac: Post release version bump

=== PyGObject 2.10.1 ===
2006-04-11  Johan Dahlin  <jdahlin@async.com.br>

	* NEWS: Update

2006-04-11  Andy Wingo  <wingo@pobox.com>

	reviewed by: Johan Dahlin  <jdahlin@async.com.br>

	* gobject/gobjectmodule.c (create_property): Parse unsigned int64
	constraints in param spec declaration using the "K" ParseTuple
	format unit, not L -- allows the full range of the datatype to be
	parsed. K format unit added in python 2.3.

2006-04-01  Gustavo J. A. M. Carneiro  <gjc@gnome.org>

	* tests/test_properties.py: Add test for #335854.

	* pygtk.py.in (require): For version == '2.0', use a hardcoded
	pygtk path, recorded during build.

	* gobject/gobjectmodule.c (_pyg_strv_to_gvalue): Don't allow
	arbitrary sequences, only tuple or list, since a string is a
	sequence too.
	(pyg_object_new): Add a bit more detail to the exception string.

2006-01-16  Johan Dahlin  <johan@gnome.org>

	* Makefile.am: Include dsextras.py in the dist and install it.

2006-03-19  Gustavo J. A. M. Carneiro  <gjc@gnome.org>

	* gobject/pygobject.c (pygobject_new_with_interfaces): Remove
	comment "It will currently not filter out interfaces already
	implemented by it parents.", since it is no longer true since
	2006-01-13.

=== PyGObject 2.10.0 ===
2006-01-16  Johan Dahlin  <johan@gnome.org>

	* NEWS: Update

2006-03-09 Michael Smith  <msmith@fluendo.com>

	reviewed by: Johan Dahlin  <jdahlin@async.com.br>

	* gobject/pygenum.c: (pyg_enum_new), (pyg_enum_from_gtype),
	(pyg_enum_add):
	* gobject/pygflags.c: (pyg_flags_new), (pyg_flags_from_gtype),
	(pyg_flags_add):
	Plug a couple of leaks, fixes #334027.

2006-01-19  Johan Dahlin  <johan@gnome.org>

	* configure.ac (export_dynamic):
	* Makefile.am (egg):
	Add a make egg target

2006-01-16  Johan Dahlin  <johan@gnome.org>

	* configure.ac: Post release version bump

=== PyGObject 2.9.1 ===
2006-01-16  Johan Dahlin  <johan@gnome.org>

	* NEWS: Update

2006-01-15  Christopher Aillon  <caillon@redhat.com>

	* gobject/gobjectmodule.c (pyg_strv_to_gvalue):
	Don't call g_value_init since the other *_to_gvalue
	methods expect an already inited GValue

2006-01-14  Gustavo J. A. M. Carneiro  <gjc@gnome.org>

	* gobject/gobjectmodule.c (iowatch_marshal): Warn if io callback
	returns None: almost always this is an error.

2006-01-13  Gustavo J. A. M. Carneiro  <gjc@gnome.org>

	* gobject/pygobject.c (pygobject_register_class): Change strategy
	a bit: don't ignore bases; use but augment it with missing bases
	extracted in runtime.

	* gobject/pygobject.c (pygobject_register_class): Don't use the
	passed in 'bases' parameter; instead find out in runtime the bases
	for any given gtype.
	(pyg_type_get_bases, pygobject_new_with_interfaces): Refactor code
	that dynamically discovers bases into a separate function;
	Override tp_dealloc, tp_alloc, tp_free, tp_traverse, and tp_clear,
	inherit them again from the parent type, since type_new inside
	Python core sets them to hardcoded functions subtype_xxx.  Also
	call py_parent_type->ob_type, instead of fixed &PyType_Type.
	(pygobject_clear): Change a g_message to g_warning.

2006-01-13  Johan Dahlin  <jdahlin@async.com.br>

	* gobject/gobjectmodule.c: (pyg_io_add_watch),
	(marshal_emission_hook), (pyg_add_emission_hook),
	(pyg_remove_emission_hook):
	* gobject/pygobject.c:
	* tests/test_signal.py:

	Add add/remove_emission_hook and tests. Fixes #325977

2006-01-11  Gustavo J. A. M. Carneiro  <gjc@inescporto.pt>

	* gobject/gobjectmodule.c (_pyg_signal_accumulator),
	(create_signal, pyg_signal_accumulator_true_handled),
	(initgobject): Bug 155380 -- Add support for signal accumulators.

	* tests/runtests.py: Add 'test_enum', 'test_conversion' to
	SKIP_FILES, since they depend on pygtk modules so don't work
	anymore.  This should be eventually fixed, though.

	* tests/test_signal.py: Test signal accumulators.

	* gobject/pygtype.c (object_doc_descr_get): Reorder
	properties/signals documentation more nicely: signals + properties
	from each type are presented, with types ranging from the leaf
	types to the base types.

	* configure.ac: Branch, bump version to 2.9.1.

=== PyGObject 2.8.0 ===
2006-01-09  Johan Dahlin  <jdahlin@async.com.br>

	* MANIFEST.in:
	* Makefile.am:
	* tests/Makefile.am:

	Make dist/distcheck work again

2006-01-09  Johan Dahlin  <jdahlin@async.com.br>

	* setup.py: Add distutils support

	* dsextras.py (get_m4_define): Check for configure.ac aswell.

	* .cvsignore:
	* AUTHORS:
	* COPYING:
	* INSTALL:
	* Makefile.am:
	* PKG-INFO.in:
	* README:
	* autogen.sh:
	* configure.ac:
	* examples/.cvsignore:
	* examples/Makefile.am:
	* gobject/gobjectmodule.c: (initgobject):
	* m4/jhflags.m4:
	* m4/python.m4:
	* pygobject-2.0.pc.in:
	* tests/Makefile.am:
	* tests/common.py:
	* tests/leak.glade:
	* tests/runtests.py:
	* tests/test_actiongroup.py:
	* tests/test_dialog.py:
	* tests/test_gdk.py:
	* tests/test_gdkevent.py:
	* tests/test_glade.py:
	* tests/test_gtype.py:
	* tests/test_liststore.py:
	* tests/test_radiobutton.py:
	* tests/test_signal.py:
	* tests/test_subtype.py:
	* tests/test_textview.py:
	* tests/test_thread.py:
	* tests/testhelpermodule.c: (test_type_get_type),
	(_wrap_test_g_object_new):
	* tests/testmodule.py:

	Split out PyGObject from PyGTK.
